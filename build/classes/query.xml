<?xml version="1.0" encoding="UTF-8"?>
<query>
	<member>
		<getRemainMember>
			SELECT *
			FROM   MEMBER
			WHERE  EMAIL NOT IN (
								SELECT EMAIL
								FROM   TEAM_LIST
								WHERE  TEAM_ID = ?
								)
		</getRemainMember>
		<addNewMember>
			INSERT INTO MEMBER (
									EMAIL
									, NAME
									, PASSWORD
								)
			VALUES				(
									?
									, ?
									, ?
								)			
		</addNewMember>
		
		<getMemberByIdAndPassword>
			SELECT 	*
			FROM 	MEMBER
			WHERE	EMAIL = ?
			AND		PASSWORD = ?
		</getMemberByIdAndPassword>
	
		<selectIdCount>
			SELECT COUNT(EMAIL)
			FROM   MEMBER
			WHERE  EMAIL = ?
		</selectIdCount>
		
		<checkPassword>
			SELECT *
			FROM   MEMBER
			WHERE  EMAIL = ?
		</checkPassword>
		
		<updateMember>
			UPDATE	MEMBER
			SET		PASSWORD = ?
					, NAME = ?
			WHERE	EMAIL = ?
		</updateMember>
		
		<updateMemberPhoto>
			UPDATE 	MEMBER
			SET 	PIC_PATH = ?
					, PIC_NAME = ?
			WHERE 	EMAIL = ?
		</updateMemberPhoto>
		
		
		<getAllMember>
			SELECT *
			FROM   MEMBER
		</getAllMember>
		
		<getMemInfoByEmail>
			SELECT *
			FROM   MEMBER
			WHERE  EMAIL = ?
		</getMemInfoByEmail>
		
	</member>
	<chat>
	<updateLatestKeywordByTeamId>
	  UPDATE KEYWORD
	SET 	SEARCH_DT = SYSDATE
        , KEYWORD = ?
	WHERE KEYWORD = (
						SELECT KEYWORD
						FROM(
							SELECT KEYWORD
							FROM 	KEYWORD
							WHERE 	TEAM_ID = ?
							ORDER BY SEARCH_DT ASC
							)
						WHERE ROWNUM = 1
					)
	</updateLatestKeywordByTeamId>
      <insertChat>
         INSERT INTO CHAT (
               CHAT_ID
               , CHAT_DATE
               , NICK_NAME
               , DESCRIPTION
               , NOTICE
               , TEAM_ID
         )VALUES (
               CHAT_ID_SEQ.NEXTVAL
               , TO_TIMESTAMP(?)
               , ?
               , ?
               , ''
               , ?
         )      
      </insertChat>
      
      <getAllChatByDay>
		   SELECT    CHAT_ID
          , CHAT_DATE
          , NICK_NAME
          , DESCRIPTION
          , NOTICE
          , TEAM_ID
         FROM   CHAT
         WHERE  TO_CHAR(CHAT_DATE,'YYYY-MM-DD') LIKE ?
         AND    TEAM_ID = ?
      </getAllChatByDay>
      
      <getAllChatByNickName>
         SELECT    CHAT_ID
               , CHAT_DATE
               , NICK_NAME
               , DESCRIPTION
               , NOTICE
               , TEAM_ID
         FROM   CHAT
         WHERE  NICK_NAME LIKE ?
         AND    TEAM_ID = ?
      </getAllChatByNickName>
      
      <getNickNamebyTeamId>
         SELECT   NICK_NAME
         FROM     CHAT
         WHERE    TEAM_ID = ?
         GROUP    BY NICK_NAME
      </getNickNamebyTeamId>
      
      <getTalkCountbyNickName>
         SELECT  COUNT(*), NICK_NAME
         FROM    CHAT
         GROUP   BY NICK_NAME;      
      </getTalkCountbyNickName>
      <deleteAllKeyWordByTeamId>
         DELETE  KEYWORD
         WHERE   TEAM_ID = ?
      </deleteAllKeyWordByTeamId>
      
      <deleteAllChatByTeamId>
         DELETE    CHAT
         WHERE   TEAM_ID = ?
      </deleteAllChatByTeamId>
      
      <getChatRateByTeamId>
	      SELECT  C2.NICK_NAME  NICKNAME  
	              , C2.CT/C1.CT  GCT 
	   	  FROM    (
	                  SELECT  COUNT(*) CT
	                  FROM    CHAT
	                    WHERE   TEAM_ID = ?
	                ) C1
	           ,
	           (      
	                 SELECT  NICK_NAME, COUNT(*) CT
	                 FROM    CHAT
	                 WHERE   TEAM_ID = ?
	                 GROUP   BY NICK_NAME
	          ) C2
      </getChatRateByTeamId>
        	DELETE    CALENDAR
        	 WHERE   TEAM_ID = ?
      <getTimeChatCountByTeamId>
      		SELECT       NIGHT_CHAT.NICK_NAME 
            , NIGHT_CHAT.NC 
            , SUM_NC
            , MORNING_CHAT.MC
            , SUM_MC
			FROM 
       	  ( 
            SELECT    NICK_NAME,COUNT(*) NC
            FROM      (
            SELECT   NICK_NAME
                     , TO_CHAR( CHAT_DATE, 'HH24') 
            FROM    CHAT
            WHERE     (TO_CHAR( CHAT_DATE, 'HH24') BETWEEN '00' AND '03'
            OR        TO_CHAR( CHAT_DATE, 'HH24') BETWEEN '22' AND '23')
            AND     TEAM_ID = ?
                 ) 
            GROUP   BY NICK_NAME
         	 ) NIGHT_CHAT
	         ,         
	         (
            SELECT  SUM(NC) SUM_NC
            FROM    (
                        SELECT    NICK_NAME,COUNT(*) NC
                        FROM      (
                        SELECT   NICK_NAME
                                 , TO_CHAR( CHAT_DATE, 'HH24') 
                        FROM    CHAT
                        WHERE     (TO_CHAR( CHAT_DATE, 'HH24') BETWEEN '00' AND '03'
                        OR        TO_CHAR( CHAT_DATE, 'HH24') BETWEEN '22' AND '23')
                        AND     TEAM_ID = ?
                             ) 
                        GROUP   BY NICK_NAME
                    )
		          ) 
		         ,
		         (
		            SELECT  NICK_NAME
		            , COUNT(*) MC
		            FROM          ( 
		                            SELECT     NICK_NAME
		                                    , TO_CHAR( CHAT_DATE, 'HH24') 
		                            FROM    CHAT
		                                     WHERE TO_CHAR( CHAT_DATE, 'HH24') BETWEEN '05' AND '10'
		                                     AND   TEAM_ID = ?
		                          ) 
		            GROUP   BY NICK_NAME
		         ) MORNING_CHAT
		         ,
		         (
		            SELECT  SUM(MC) SUM_MC
		            FROM    (
		                            SELECT  NICK_NAME
		                            , COUNT(*) MC
		                            FROM          ( 
		                                            SELECT     NICK_NAME
		                                                    , TO_CHAR( CHAT_DATE, 'HH24') 
		                                            FROM    CHAT
		                                                     WHERE TO_CHAR( CHAT_DATE, 'HH24') BETWEEN '05' AND '10'
		                                                     AND   TEAM_ID = ?
		                                          ) 
		                            GROUP   BY NICK_NAME
		                    )
				          ) 
					WHERE    NIGHT_CHAT.NICK_NAME = MORNING_CHAT.NICK_NAME
		
		      </getTimeChatCountByTeamId>
		      
		      <getAllChat>
		SELECT *
			FROM CHAT
			WHERE TEAM_ID = ?
		</getAllChat>
		      
		      
		      <getFirstChatCountByTeamId>
		     	   SELECT REPLY_NICK, SUN_TALK, SUM_ST
						FROM    (
		           SELECT  SUM(COUNT_TALK) SUM_ST
		           FROM (
		                    SELECT REPLY_NICK, ROUND(MI * 1 * 24 * 60) MI , COUNT(*) COUNT_TALK            
		                    FROM  
		                        (
		                        SELECT C1.NICK_NAME REPLY_NICK, ROUND(C1.CHAT_DATE - C2.CHAT_DATE, 15) AS MI
		                        FROM CHAT C1 , CHAT C2
		                        WHERE C1.CHAT_ID = C2.CHAT_ID + 1
		                        AND   C1.NICK_NAME != C2.NICK_NAME
		                        AND   C1.TEAM_ID = ?
		                        AND   C2.TEAM_ID = ?
                        ) 
                    WHERE ROUND(MI * 1 * 24 * 60) >= 180
                    GROUP BY REPLY_NICK, MI
                    ORDER BY MI, REPLY_NICK
                )
        ) C1
        ,
        (
           SELECT REPLY_NICK, SUM(COUNT_TALK) SUN_TALK
           FROM   (
                   SELECT REPLY_NICK, ROUND(MI * 1 * 24 * 60) MI , COUNT(*) COUNT_TALK            
                    FROM  
                        (
                        SELECT C1.NICK_NAME REPLY_NICK, ROUND(C1.CHAT_DATE - C2.CHAT_DATE, 15) AS MI
                        FROM  CHAT C1 , CHAT C2
                        WHERE C1.CHAT_ID = C2.CHAT_ID + 1
                        AND   C1.NICK_NAME != C2.NICK_NAME
                        AND   C1.TEAM_ID = ?
                        AND   C2.TEAM_ID = ?
                        ) 
                    WHERE ROUND(MI * 1 * 24 * 60) >= 180
                    GROUP BY REPLY_NICK, MI
                    ORDER BY MI, REPLY_NICK
                   )  
            GROUP   BY REPLY_NICK
        ) C2
      </getFirstChatCountByTeamId>
      
      <getFastReplyChatCountByTeamId>
      SELECT REPLY_NICK, COUNT_TALK, SUM_TALK, ACT
		FROM (
        SELECT REPLY_NICK, ROUND(MI * 1 * 24 * 60) MI , COUNT(*) COUNT_TALK  
        FROM  
            (
            SELECT C1.NICK_NAME REPLY_NICK, ROUND(C1.CHAT_DATE - C2.CHAT_DATE, 15) AS MI
            FROM CHAT C1 , CHAT C2
            WHERE C1.CHAT_ID = C2.CHAT_ID + 1
            AND   C1.NICK_NAME != C2.NICK_NAME
            AND   C1.TEAM_ID = ?
            AND   C2.TEAM_ID = ?
            ) 
            
            
        WHERE MI &gt;= 0
        AND   MI &lt;= 180 
        GROUP BY REPLY_NICK, MI
        ORDER BY MI, REPLY_NICK
      ) TA
      ,
      (
        SELECT  ROUND(MI * 1 * 24 * 60) MI
        FROM    (
                    SELECT C1.NICK_NAME REPLY_NICK, ROUND(C1.CHAT_DATE - C2.CHAT_DATE, 15) AS MI
                    FROM CHAT C1 , CHAT C2
                    WHERE C1.CHAT_ID = C2.CHAT_ID + 1
                    AND   C1.NICK_NAME != C2.NICK_NAME
                    AND   C1.TEAM_ID = ?
                    AND   C2.TEAM_ID = ?
                )
        WHERE   ROWNUM = 1
        ORDER   BY MI    
      ) MIN_MI   
      , 
      (
           SELECT MI,AVG(COUNT_TALK) ACT ,SUM(COUNT_TALK) SUM_TALK
           FROM    (
                        SELECT REPLY_NICK, ROUND(MI * 1 * 24 * 60) MI , COUNT(*) COUNT_TALK            
                        FROM  
                            (
                            SELECT C1.NICK_NAME REPLY_NICK, ROUND(C1.CHAT_DATE - C2.CHAT_DATE, 15) AS MI
                            FROM CHAT C1 , CHAT C2
                            WHERE C1.CHAT_ID = C2.CHAT_ID + 1
                            AND   C1.NICK_NAME != C2.NICK_NAME
                            AND   C1.TEAM_ID = ?
                            AND   C2.TEAM_ID = ?
                            ) 
                        WHERE ROUND(MI * 1 * 24 * 60) &gt;= 0
                        AND   ROUND(MI * 1 * 24 * 60) &lt;= 180 
                        GROUP BY REPLY_NICK, MI
                        ORDER BY MI, REPLY_NICK
                  )
           GROUP BY    MI
           ORDER    BY MI
      ) AVG_MI 
			WHERE TA.MI = MIN_MI.MI
			AND   TA.MI = AVG_MI.MI
</getFastReplyChatCountByTeamId>

<getHowManyChatByTeamId>
		SELECT  		C2.NICK_NAME NICK_NAME
						,  C2.SUM_TEXT SUM_TEXT
						, C1.AVG_TEXT AVG_TEXT 
						, TOTAL_COUNT
		FROM    	(
         				  SELECT  AVG(SUM(LENGTH(DESCRIPTION))) AVG_TEXT
          				  FROM    CHAT
          				  WHERE   TEAM_ID = ?
         				  GROUP   BY NICK_NAME
       				 ) C1
       				 ,(
            SELECT NICK_NAME, SUM(LENGTH(DESCRIPTION)) SUM_TEXT
            FROM    CHAT
            WHERE   TEAM_ID = ?
            GROUP   BY NICK_NAME
      				  ) C2
       				 ,( 
            SELECT COUNT(*) TOTAL_COUNT
            FROM CHAT
            WHERE TEAM_ID = ?
       				 )      
</getHowManyChatByTeamId>

<getSmileChatByTeamId>

SELECT  *
FROM    (
            SELECT   NICK_NAME, COUNT(*) POSI_COUNT 
            FROM     CHAT   
            WHERE    TEAM_ID = ?
            AND      DESCRIPTION LIKE '%ㅋㅋㅋ%' 
            OR       DESCRIPTION LIKE '%ㅎㅎㅎ%'
            OR       DESCRIPTION LIKE '%캬캬%'
            OR       DESCRIPTION LIKE '%크크크%'
            OR       DESCRIPTION LIKE '%^^%'
            GROUP   BY NICK_NAME
        ) POSI
        ,
        (
            SELECT SUM(P_COUNT) SUM_POSI
            FROM
            (
                SELECT   NICK_NAME, COUNT(*) P_COUNT
                FROM     CHAT   
                WHERE    TEAM_ID = ?
                AND      DESCRIPTION LIKE '%ㅋㅋㅋ%' 
                OR       DESCRIPTION LIKE '%ㅎㅎㅎ%'
                OR       DESCRIPTION LIKE '%캬캬%'
                OR       DESCRIPTION LIKE '%크크크%'
                OR       DESCRIPTION LIKE '%^^%'
                GROUP   BY NICK_NAME
            ) SUM_POSI
        )  
</getSmileChatByTeamId>

<getAngryChatByTeamId>
SELECT  *
FROM    (
            SELECT   NICK_NAME, COUNT(*) BAD_COUNT
            FROM     CHAT   
            WHERE    TEAM_ID = ?
            AND       DESCRIPTION LIKE '%ㅡㅡ%' 
            OR       DESCRIPTION LIKE '%^'    
            OR       DESCRIPTION LIKE '%--%'     
            GROUP   BY NICK_NAME
        ) BAD
        ,
        (
            SELECT SUM(B_COUNT) SUM_BAD
            FROM
            (
                SELECT   NICK_NAME, COUNT(*) B_COUNT
                FROM     CHAT   
                WHERE    TEAM_ID = ? 
                AND      DESCRIPTION LIKE '%ㅡㅡ%' 
                OR       DESCRIPTION LIKE '%^'    
                OR       DESCRIPTION LIKE '%--%'  
                GROUP   BY NICK_NAME
            ) SUM_BAD
        )  
</getAngryChatByTeamId>

<getDayChatByTeamId>
			SELECT 		NICK_NAME
						, COUNT_TALK
						, DAY_CHAT.CHAT_DAY
						, SUM_COUNT_TALK
			FROM   		 (
            SELECT  	COUNT(*) COUNT_TALK, TO_CHAR(CHAT_DATE,'YYYY-MM-DD') CHAT_DAY, NICK_NAME 
            FROM 		CHAT
            WHERE   	TEAM_ID = ?
            GROUP BY 	TO_CHAR(CHAT_DATE,'YYYY-MM-DD'), NICK_NAME
            ORDER BY 	TO_CHAR(CHAT_DATE,'YYYY-MM-DD')
      					)	DAY_CHAT
       					,
      			  	    (
            SELECT SUM(COUNT_TALK) SUM_COUNT_TALK, CHAT_DAY
            FROM  		(
                        SELECT  COUNT(*) COUNT_TALK, TO_CHAR(CHAT_DATE,'YYYY-MM-DD') CHAT_DAY, NICK_NAME 
                        FROM CHAT
                        WHERE   TEAM_ID = ?
                        GROUP   BY TO_CHAR(CHAT_DATE,'YYYY-MM-DD'), NICK_NAME
                        ORDER   BY TO_CHAR(CHAT_DATE,'YYYY-MM-DD')
                    )
            GROUP   BY CHAT_DAY     
            ORDER   BY CHAT_DAY
       				) SUM_DAY_CHAT
			WHERE 	DAY_CHAT.CHAT_DAY = SUM_DAY_CHAT.CHAT_DAY
</getDayChatByTeamId>
 <getChatIdByKeyword>
      	SELECT CHAT_ID
      	FROM CHAT
      	WHERE DESCRIPTION LIKE '%'||?||'%'
      	AND	TEAM_ID = ?
      </getChatIdByKeyword>

<updateTeamInfoChatUpdate>
	UPDATE TEAM
	SET UDT_USER = ?
	, UDT_DT = SYSDATE
	WHERE TEAM_ID = ?
</updateTeamInfoChatUpdate>
		
      
      <insertKeywordIntoDB>
			INSERT INTO KEYWORD(
			KEYWORD_ID
			, KEYWORD
			, TEAM_ID
			, SEARCH_DT
			)
			VALUES (
			KEYWORD_ID_SEQ.NEXTVAL
			, ?
			, ?
			, SYSDATE
			)
		</insertKeywordIntoDB>

		<getNearChatByKeyword>
			SELECT  DISTINCT CHAT_ID,
				    KEY_CHAT_ID,
					CHAT_DATE,
					NICK_NAME,
					DESCRIPTION,
					TEAM_ID
			FROM (
			SELECT CHAT_ID "KEY_CHAT_ID"
			FROM CHAT
			WHERE DESCRIPTION LIKE '%'||?||'%'
			) KEYWORD_ID
			, CHAT OCHAT
			WHERE OCHAT.CHAT_ID &lt; KEYWORD_ID.KEY_CHAT_ID + 5
			AND OCHAT.CHAT_ID &gt; KEYWORD_ID.KEY_CHAT_ID - 5
			AND OCHAT.TEAM_ID = ?
			ORDER BY CHAT_ID
		</getNearChatByKeyword>

	<getKeywordByTeamId>
		SELECT KEYWORD
		FROM(
		SELECT *
		FROM KEYWORD
		WHERE
		TEAM_ID = ?
		ORDER BY SEARCH_DT DESC
				)
		WHERE ROWNUM &lt; 6
	</getKeywordByTeamId>
		
		<updateKeywordInDB>
			UPDATE KEYWORD
			SET 	SEARCH_DT = SYSDATE
			WHERE KEYWORD = ?
			AND   TEAM_ID = ?
		</updateKeywordInDB>
      
      <getAddFileChatByTeamId>
	    SELECT NICK_NAME, MEM_COUNT, SUM_COUNT
		FROM    (
		            SELECT NICK_NAME, COUNT(*) MEM_COUNT
		            FROM CHAT
		            WHERE TEAM_ID = ?
		            AND  (DESCRIPTION LIKE '%'||?||'%'
		            OR  DESCRIPTION LIKE '%http:%')
		            GROUP  BY NICK_NAME
		        ),
		        (
		            SELECT SUM(MEM_COUNT) SUM_COUNT
		            FROM  (
		                        SELECT NICK_NAME, COUNT(*) MEM_COUNT
		                        FROM CHAT
		                        WHERE TEAM_ID = ?
		                        AND  (DESCRIPTION LIKE '%'||?||'%'
		                        OR  DESCRIPTION LIKE '%http:%')
		                        GROUP  BY NICK_NAME
		                  )
		        )
      </getAddFileChatByTeamId>
   </chat>
   
   	<team>
		<getAllListTeam>
			SELECT  	TEAM_ID
					,	CHAT_ID
					, 	TEAM_NAME
					, 	LEADER_EMAIL
			FROM PINGPONG.TEAM
		</getAllListTeam>
		
		<insertNewTeam>
				INSERT INTO PINGPONG.TEAM (
											   TEAM_ID
											   , CHAT_ID
											   , TEAM_NAME
											   , LEADER_EMAIL
											   ) 
				VALUES					 ( 
													TEAM_ID_SEQ.NEXTVAL
													,	1
													,	?
													,	?
										)
		</insertNewTeam>
		
		<getLatestTeamId>
				SELECT  TEAM_ID_SEQ.CURRVAL
				FROM	DUAL
		</getLatestTeamId>
		
		<insertNewTeamList>
		INSERT INTO PINGPONG.TEAM_LIST (
										   TEAM_LIST_ID
										   , TEAM_ID
										   , EMAIL
										   , ISLEADER
							   			) 
		VALUES 							(  TEAM_LIST_ID_SEQ.NEXTVAL
											, ?
											, ?
											, ?  
										)
		</insertNewTeamList>
		
		<showDetail>
		SELECT *
		FROM  TEAM
		WHERE TEAM_ID = ?
		</showDetail>
		
		<removeTeam>
		DELETE
		FROM TEAM
		WHERE TEAM_ID = ?
		</removeTeam>
		
		<removeTeamWaitList>		
			DELETE
			FROM    TEAM_LIST
			WHERE   EMAIL = ? 
			AND 	TEAM_ID = ?	
		</removeTeamWaitList>
		
		<getListTeamById>
		SELECT  	T.TEAM_ID,
					TEAM_LIST_ID,
					CHAT_ID,
					TEAM_NAME,
					LEADER_EMAIL,
					ISLEADER,
					MEM_COUNT
		FROM   TEAM_LIST TL, TEAM T
		WHERE  EMAIL = ?
		AND    TL.TEAM_ID = T.TEAM_ID
		</getListTeamById>
		
		<getLeaderTeamById>
		SELECT  DISTINCT T.TEAM_ID,
		        CHAT_ID,
		        TEAM_NAME,
		        LEADER_EMAIL,
		        ISLEADER,
		        EMAIL,
		        MEM_COUNT
		FROM   TEAM_LIST TL, TEAM T
		WHERE  LEADER_EMAIL = ?
		AND    TL.TEAM_ID = T.TEAM_ID
		</getLeaderTeamById>
		
		<getTeamInfoById>
		SELECT  	T.TEAM_ID,
					TEAM_LIST_ID,
					CHAT_ID,
					TEAM_NAME,
					LEADER_EMAIL,
					ISLEADER,
					EMAIL,
					UDT_USER,
					UDT_DT
		FROM   TEAM_LIST TL, TEAM T
		WHERE  T.TEAM_ID = ?
		AND    TL.TEAM_ID = T.TEAM_ID
		</getTeamInfoById>
		
		<getMemberCount>
		UPDATE PINGPONG.TEAM_LIST
		SET    MEM_COUNT    =  (
								SELECT COUNT(EMAIL)
								FROM    TEAM_LIST
								WHERE  TEAM_ID = ?
								)
		WHERE  TEAM_ID = ?
		</getMemberCount>


		<getMemberEmailByTeamId>
			SELECT TL.EMAIL , NAME, PIC_NAME
			FROM   TEAM_LIST TL, MEMBER M
			WHERE  TL.EMAIL = M.EMAIL
			AND    TEAM_ID = ?
		</getMemberEmailByTeamId>
		
		<deleteMember>
			DELETE
			FROM    TEAM_LIST
			WHERE   EMAIL = ? 
			AND 	TEAM_ID = ?
		</deleteMember>
		
		
		<addNewMember>
		INSERT INTO TEAM_LIST (
							   EMAIL,
							   ISLEADER, 
							   TEAM_ID, 
							   TEAM_LIST_ID
							   ) 
		VALUES ( ?,
		 		'N',
		 	      ?,
		 		TEAM_LIST_ID_SEQ.NEXTVAL )
		</addNewMember>
		
		<getOnlyWaitList>
			SELECT  EMAIL
			FROM    TEAM_LIST
            WHERE    EMAIL  NOT IN   (
                                        SELECT EMAIL
                                        FROM   MEMBER
                                        )
            AND 	TEAM_ID =	?	
		</getOnlyWaitList>
		
	</team>
	<notice>
		<insertNotice>
			INSERT INTO CALENDAR (
								   CALENDAR_ID
								   , TITLE
								   , DESCRIPTION
								   , CLASS_NAME
								   , START_DATE
								   , END_DATE
								   , TEAM_ID
								   )
			VALUES 				( 
									CALENDAR_ID_SEQ.NEXTVAL
									, ?
									, ?
									, ?
									, ?
									, ?
									, ?
								)
		</insertNotice>
		
		<getCalNoticebyTeamId>
			SELECT		CALENDAR_ID
						,TEAM_ID
						, TITLE
						, DESCRIPTION
					    , CLASS_NAME
				   	    , START_DATE
					    , END_DATE
			FROM		CALENDAR
			WHERE		TEAM_ID = ?
			
		</getCalNoticebyTeamId>
		
		<insertNoticesbyChatVO>
			INSERT INTO CALENDAR (
								   CALENDAR_ID
								   , TITLE
								   , DESCRIPTION
								   , CLASS_NAME
								   , START_DATE
								   , END_DATE
								   , TEAM_ID
								   )
			VALUES 				( 
									CALENDAR_ID_SEQ.NEXTVAL
									, '공지'
									, ?
									, 'bgm-teal'
									, ?
									, ?
									, ?
								)
		</insertNoticesbyChatVO>
		<removeByTeamId>
			DELETE	
			FROM	CALENDAR
			WHERE	TEAM_ID = ?
		</removeByTeamId>
		<removeByCalendarId>
			DELETE	
			FROM	CALENDAR
			WHERE	CALENDAR_ID = ?
		</removeByCalendarId>
		
		<updateAllNotice>
			UPDATE	CALENDAR
			SET		TITLE = ?
					, DESCRIPTION = ?
					, CLASS_NAME = ?
			WHERE	CALENDAR_ID = ?
		</updateAllNotice>
		
		<updateTitleAndDescription>
			UPDATE	CALENDAR
			SET		TITLE = ?
					, DESCRIPTION = ?
			WHERE	CALENDAR_ID = ?
		</updateTitleAndDescription>
		
		<updateTitleAndClassName>
			UPDATE	CALENDAR
			SET		TITLE = ?
					, CLASS_NAME = ?
			WHERE	CALENDAR_ID = ?
		</updateTitleAndClassName>
		
		<updateOnlyTitle>
			UPDATE	CALENDAR
			SET		TITLE = ?
			WHERE	CALENDAR_ID = ?
		</updateOnlyTitle>
		
		<updateDescriptionAndClassName>
			UPDATE	CALENDAR
			SET		DESCRIPTION = ?
					, CLASS_NAME = ?
			WHERE	CALENDAR_ID = ?
		</updateDescriptionAndClassName>
		
		<updateOnlyDescription>
			UPDATE	CALENDAR
			SET		DESCRIPTION = ?
			WHERE	CALENDAR_ID = ?
		</updateOnlyDescription>
		
		<updateOnlyClassName>
			UPDATE	CALENDAR
			SET		CLASS_NAME = ?
			WHERE	CALENDAR_ID = ?
		</updateOnlyClassName>
		
		<getCalNoticebyCalendarId>
			SELECT *
			FROM CALENDAR
			WHERE CALENDAR_ID = ?
		</getCalNoticebyCalendarId>
	</notice>
	
		<operationHistory>
		<insertHistory>
			INSERT INTO PINGPONG.OPER_HIST (
											   HISTORY_ID
											   , IP
											   , EMAIL
											   , CRT_DT
											   , URL
											   , ACTION_CODE
											   , DESCRIPTION
											) 
			VALUES 							(	
												 HISTORY_ID_SEQ.NEXTVAL
												 , ?
												 , ? 
												 , SYSDATE 
												 , ? 
												 , ? 
												 , ?  
											)
		</insertHistory>
	</operationHistory>
	
</query>